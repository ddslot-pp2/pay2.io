#ifndef CARDS_HPP
#define CARDS_HPP
#include <deque>
#include <random>
#include <algorithm>
#include <iterator>

class cards {
public:
  enum class card_type : int { 
    SPADE_ACE, SPADE_TWO, SPADE_THREE, SPADE_FOUR, SPADE_FIVE, SPADE_SIX, SPADE_SEVEN, SPADE_EIGHT, SPADE_NINE, SPADE_TEN, SPADE_JACK, SPADE_QUEEN, SPADE_KING,
    DIAMOND_ACE, DIAMOND_TWO, DIAMOND_THREE, DIAMOND_FOUR, DIAMOND_FIVE, DIAMOND_SIX, DIAMOND_SEVEN, DIAMOND_EIGHT, DIAMOND_NINE, DIAMOND_TEN, DIAMOND_JACK, DIAMOND_QUEEN, DIAMOND_KING,
    CLUB_ACE, CLUB_TWO, CLUB_THREE, CLUB_FOUR, CLUB_FIVE, CLUB_SIX, CLUB_SEVEN, CLUB_EIGHT, CLUB_NINE, CLUB_TEN, CLUB_JACK, CLUB_QUEEN, CLUB_KING,
    HEART_ACE, HEART_TWO, HEART_THREE, HEART_FOUR, HEART_FIVE, HEART_SIX, HEART_SEVEN, HEART_EIGHT, HEART_NINE, HEART_TEN, HEART_JACK, HEART_QUEEN, HEART_KING, END
  };

  cards(int deck_count=6);

  void shuffle();
  std::pair<card_type, int> get_card();

private:

  std::deque<card_type> q_;
  int deck_count_;

};

#endif
